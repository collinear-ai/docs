{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/agentic/generate/{model_id}/{workflow_id}": {
      "post": {
        "summary": "Generate Data From Workflow",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          },
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynthDataGenerateResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agentic/workflows/upload": {
      "post": {
        "summary": "Upload Workflow Logs",
        "operationId": "upload_workflow_logs_api_v1_agentic_workflows_upload_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/curator": {
      "post": {
        "summary": "Run Curator Judge",
        "operationId": "curator_judge__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuratorJudgeRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuratorJudgeResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/": {
      "post": {
        "summary": "Invite New User",
        "operationId": "invite_new_user_api_v1_user__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteNewUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/space/{space_id}/judges": {
      "get": {
        "summary": "Get Judges For Space",
        "operationId": "get_judges_for_space_api_v1_space__space_id__judges_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Space Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JudgeDashboardDTO"
                  },
                  "title": "Response Get Judges For Space Api V1 Space  Space Id  Judges Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/{conversation_id}/download": {
      "get": {
        "summary": "Download Conversation By Id",
        "operationId": "download_conversation_by_id_api_v1_conversations__conversation_id__download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Conversation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conversations/upload": {
      "post": {
        "summary": "Upload Conversation",
        "operationId": "upload_conversation_api_v1_conversations_upload_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/judge/safety": {
      "post": {
        "summary": "Judge Func",
        "operationId": "judge_func_api_v1_judge_safety_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgeSafetyRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JudgeOutputDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/reliability": {
      "post": {
        "summary": "Judge Func Hallucination",
        "operationId": "judge_func_hallucination_api_v1_judge_reliability_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgeAnnotationHallucinationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JudgeOutputDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/dataset-annotation/{dataset_annotation_id}": {
      "post": {
        "summary": "Run Judgement On Dataset Annotation",
        "operationId": "run_judgement_on_dataset_annotation_api_v1_judge_dataset_annotation__dataset_annotation_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Annotation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgeDatasetAnnotationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetAnnotationsDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/judge/add-judgement": {
      "post": {
        "summary": "Add Judgement To Dataset Annotation",
        "operationId": "add_judgement_to_dataset_annotation_api_v1_judge_add_judgement_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddJudgementsDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/upload/curated-data": {
      "post": {
        "summary": "Upload Improved Data",
        "operationId": "upload_curated_data_api_v1_judge_upload_curated_data_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_curated_data_api_v1_judge_upload_curated_data_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/conversation": {
      "post": {
        "summary": "Fetch Judgement For Conversation",
        "operationId": "fetch_judgement_for_conversation_api_v1_judge_conversation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgementConversationReqInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/upload/{judge_id}": {
      "post": {
        "summary": "Upload Conversation Csv Or Json",
        "operationId": "upload_conversation_csv_or_json_api_v1_judge_upload__judge_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "judge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Judge Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_conversation_csv_or_json_api_v1_judge_upload__judge_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/judge/create/sdk": {
      "post": {
        "summary": "Add New Judge Sdk",
        "operationId": "add_new_judge_sdk_api_v1_judge_create_sdk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgeCreateSdkRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Add New Judge Sdk Api V1 Judge Create Sdk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/": {
      "post": {
        "summary": "Add New Judge",
        "operationId": "add_new_judge_api_v1_judge__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JudgeCreateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Add New Judge Api V1 Judge  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/curated_data/space/{space_id}": {
      "get": {
        "summary": "Get Dataset Annotations By Space Id",
        "operationId": "get_dataset_annotations_by_space_id_api_v1_curated_data_space__space_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Space Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetAnnotationsDTO"
                  },
                  "title": "Response Get Dataset Annotations By Space Id Api V1 Improved Data Space  Space Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curated_data/space/{space_id}/new": {
      "get": {
        "summary": "Get Dataset Annotations By Space Id",
        "operationId": "get_dataset_annotations_by_space_id_api_v1_curated_data_space__space_id__new_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Space Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetAnnotationsNewDTO"
                  },
                  "title": "Response Get Dataset Annotations By Space Id Api V1 Improved Data Space  Space Id  New Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curated_data/dataset/{dataset_id}": {
      "get": {
        "summary": "Dataset Annotations By Dataset Id",
        "operationId": "dataset_annotations_by_dataset_id_api_v1_curated_data_dataset__dataset_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetAnnotationsNewDTO"
                  },
                  "title": "Response Dataset Annotations By Dataset Id Api V1 Improved Data Dataset  Dataset Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/curated_data/space/{space_id}/upload": {
      "post": {
        "summary": "Upload Dataset Annotations",
        "operationId": "upload_dataset_annotations_api_v1_curated_data_space__space_id__upload_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Space Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_dataset_annotations_api_v1_curated_data_space__space_id__upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/name": {
      "post": {
        "summary": "Get Dataset Annotations By Space Id",
        "operationId": "get_dataset_annotations_by_space_id_api_v1_dataset_name_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetByNameRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatasetByNameResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/dataset/": {
      "post": {
        "summary": "Create New Dataset",
        "operationId": "create_new_dataset_api_v1_dataset__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewDatasetRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDatasetResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/dataset/upload": {
      "post": {
        "summary": "Upload New Dataset",
        "operationId": "upload_new_dataset_api_v1_dataset_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_new_dataset_api_v1_dataset_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/dataset/{dataset_id}/download": {
      "get": {
        "summary": "Download Json For Evaluation",
        "operationId": "download_json_for_evaluation_api_v1_dataset__dataset_id__download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/assess/upload": {
      "post": {
        "summary": "Upload New Assessed Dataset",
        "operationId": "upload_new_assessed_dataset_api_v1_dataset_assess_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_new_assessed_dataset_api_v1_dataset_assess_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/model/": {
      "post": {
        "summary": "Add New Model",
        "operationId": "add_new_model_api_v1_model__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Add New Model Api V1 Model  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/model/{model_id}": {
      "get": {
        "summary": "Get Model By Id",
        "operationId": "get_model_by_id_api_v1_model__model_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/model/inference": {
      "post": {
        "summary": "Run Model For Inference",
        "operationId": "run_model_for_inference_api_v1_model_inference_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunInferenceRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Run Model For Inference Api V1 Model Inference Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/model/logs": {
      "post": {
        "summary": "Sdk Logs",
        "operationId": "sdk_logs_api_v1_model_logs_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogsAdditionRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Sdk Logs Api V1 Model Logs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/synth_data/{synth_data_id}": {
      "get": {
        "summary": "Trigger Evaluation",
        "operationId": "trigger_evaluation_api_v1_synth_data__synth_data_id__get",
        "parameters": [
          {
            "name": "synth_data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Synth Data Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agentic/evaluate/{model_id}": {
      "post": {
        "summary": "Evaluate Generated Data",
        "operationId": "evaluate_generated_data_api_v1_agentic_evaluate__model_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          },
          {
            "name": "generation_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Generation Id"
            }
          } 
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricsDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluateGeneratedDataResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agentic/evaluate/{evaluation_id}/download": {
      "post": {
        "summary": "Download Generated and Evaluated Data",
        "operationId": "download_generated_and_evaluated_data_api_v1_agentic_evaluate__evaluation_id__download_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Evaluation Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Format",
              "default": "json"
            }
          },
          {
            "name": "detail_level",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Detail Level",
              "default": "detailed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/synth_data/generate": {
      "post": {
        "summary": "Generate Data From Body",
        "operationId": "generate_data_from_body_api_v1_synth_data_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SynthDataGenerateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SynthDataGenerateResponseDTO"
                  },
                  "type": "array",
                  "title": "Response Generate Data From Body Api V1 Synth Data Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/synth_data/{synth_data_id}/download": {
      "get": {
        "summary": "Download Json For Evaluation",
        "operationId": "download_json_for_evaluation_api_v1_synth_data__synth_data_id__download_get",
        "parameters": [
          {
            "name": "synth_data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Synth Data Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/evaluation/{evaluation_id}": {
      "get": {
        "summary": "Trigger Evaluation",
        "operationId": "trigger_evaluation_api_v1_evaluation__evaluation_id__get",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/evaluation/{evaluation_id}/download": {
      "get": {
        "summary": "Download Json For Evaluation",
        "operationId": "download_json_for_evaluation_api_v1_evaluation__evaluation_id__download_get",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/evaluation/compare/judge": {
      "post": {
        "summary": "Get Compare Rows Responses For Same Dataset",
        "operationId": "get_compare_rows_responses_for_same_dataset_api_v1_evaluation_compare_judge_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompareEvaluationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CompareEvaluationSameDatasetResponseTypeDTO"
                  },
                  "type": "array",
                  "title": "Response Get Compare Rows Responses For Same Dataset Api V1 Evaluation Compare Judge Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/evaluation/compare/dataset": {
      "post": {
        "summary": "Get Compare Rows Response For Same Judge",
        "operationId": "get_compare_rows_response_for_same_judge_api_v1_evaluation_compare_dataset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompareEvaluationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CompareEvaluationSameDatasetResponseTypeDTO"
                  },
                  "type": "array",
                  "title": "Response Get Compare Rows Response For Same Judge Api V1 Evaluation Compare Dataset Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/logs/veritas/download": {
      "post": {
        "summary": "Download Json For Evaluation",
        "operationId": "download_json_for_evaluation_api_v1_logs_veritas_download_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadVeritasLogsRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/models": {
      "get": {
        "summary": "List Models",
        "description": "Lists models for an organization identified by the API Key.",
        "operationId": "list_models_v1_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelList"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/chat/completions": {
      "post": {
        "summary": "Create Chat Completion",
        "description": "Shim for OpenAI's /v1/chat/completions.",
        "operationId": "create_chat_completion_v1_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletionCreateParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/graphql": {
      "get": {
        "summary": "Handle Http Get",
        "operationId": "handle_http_get_graphql_get",
        "responses": {
          "200": {
            "description": "The GraphiQL integrated development environment.",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found if GraphiQL or query via GET are not enabled."
          }
        }
      },
      "post": {
        "summary": "Handle Http Post",
        "operationId": "handle_http_post_graphql_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EvaluateGeneratedDataResponseDTO": {
        "properties": {
          "assessment_id": {
            "type": "string",
            "title": "Assessment Id"
          },
          "results": {
            "type": "object",
            "title": "Results",
            "properties": {
              "action_completion": {
                "type": "object",
                "title": "Action Completion",
                "properties": {
                  "score": {
                    "type": "number",
                    "title": "Score"
                  },
                  "failed_sessions": {
                    "type": "array",
                    "title": "Failed Sessions",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "tool_selection_quality": {
                  "type": "object",
                  "title": "Tool Selection Quality",
                  "properties": {
                    "score": {
                      "type": "number",
                      "title": "Score"
                    },
                    "common_errors": {
                      "type": "array",
                      "title": "Common Errors",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "conversation_flow": {
                  "type": "object",
                  "title": "Conversation Flow",
                  "properties": {
                    "score": {
                      "type": "number",
                      "title": "Score"
                    },
                    "suggestions": {
                      "type": "array",
                      "title": "Suggestions",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MetricsDTO": {
        "properties": {
          "metrics": {
            "type": "object",
            "title": "Metrics",
            "properties": {
              "preset": {
                "type": "array",
                "title": "Preset",
                "items": {
                  "type": "string",
                  "title": "Preset"
                }
              },
              "custom": {
                "type": "array",
                "title": "Custom",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name"
                  },
                  "definition": {
                    "type": "string",
                    "title": "Definition"
                  },
                  "weight": {
                    "type": "number",
                    "title": "Weight"
                  }
                }
              } 
            }
          },
          "thresholds": {
            "type": "object",
            "title": "Thresholds",
            "properties": {
              "warning": {
                "type": "number",
                "title": "Warning"
              },
              "critical": {
                "type": "number",
                "title": "Critical"
              }
            }
          }
        },
        "type": "object",
        "title": "MetricsDTO"
      }
    },
    "WorkflowUpload": {
      "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "default": "sample_agent_workflow.json" 
          } 
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "WorkflowUpload"
    },
      "WorkflowUploadResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Workflow logs uploaded successfully"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "default": "d9f82ea2-3cb4-4fd9-a8bb-1d9b293fab67"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "WorkflowUploadResponse"
      },
      "AddJudgementsDTO": {
        "properties": {
          "judgements": {
            "items": {
              "$ref": "#/components/schemas/DatasetAnnotationJudgementDTO"
            },
            "type": "array",
            "title": "Judgements",
            "default": []
          }
        },
        "type": "object",
        "title": "AddJudgementsDTO"
      },
      "AddModelRequestDTO": {
        "properties": {
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "base_url": {
            "type": "string",
            "title": "Base Url"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "system_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Prompt",
            "default": ""
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "client": {
            "$ref": "#/components/schemas/ModelTypeEnum"
          }
        },
        "type": "object",
        "required": [
          "model_name",
          "base_url",
          "space_id",
          "api_key",
          "nickname",
          "client"
        ],
        "title": "AddModelRequestDTO"
      },
      "ApiResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ApiResponse"
      },
      "Audio": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "Audio"
      },
      "Body_generate_data_api_v1_agentic_generate__model_id__workflow_id__post": {
        "properties": {
          "model_id": {
            "type": "string",
            "format": "uuid",
            "title": "Model Id"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "workflow_id"
        ],
        "title": "Body_generate_data_api_v1_agentic_generate__model_id__workflow_id__post"
      },
      "Body_evaluate_generated_data_api_v1_agentic_evaluate__evaluation_id__post": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": [
          "workflow_id"
        ],
        "title": "Body_evaluate_generated_data_api_v1_agentic_evaluate__evaluation_id__post"
      },
      "Body_upload_conversation_csv_or_json_api_v1_judge_upload__judge_id__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_conversation_csv_or_json_api_v1_judge_upload__judge_id__post"
      },
      "Body_upload_curated_data_api_v1_judge_upload_curated_data_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_curated_data_api_v1_judge_upload_curated_data_post"
      },
      "Body_upload_dataset_annotations_api_v1_curated_data_space__space_id__upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_dataset_annotations_api_v1_curated_data_space__space_id__upload_post"
      },
      "Body_upload_new_assessed_dataset_api_v1_dataset_assess_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "evaluation_name": {
            "type": "string",
            "title": "Evaluation Name"
          },
          "dataset_id": {
            "type": "string",
            "title": "Dataset Id"
          },
          "dataset_name": {
            "type": "string",
            "title": "Dataset Name"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          }
        },
        "type": "object",
        "required": [
          "file",
          "evaluation_name",
          "space_id"
        ],
        "title": "Body_upload_new_assessed_dataset_api_v1_dataset_assess_upload_post"
      },
      "Body_upload_new_dataset_api_v1_dataset_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "dataset_name": {
            "type": "string",
            "title": "Dataset Name"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          }
        },
        "type": "object",
        "required": [
          "file",
          "dataset_name",
          "space_id"
        ],
        "title": "Body_upload_new_dataset_api_v1_dataset_upload_post"
      },
      "ChatCompletion": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "choices": {
            "items": {
              "$ref": "#/components/schemas/Choice"
            },
            "type": "array",
            "title": "Choices"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "object": {
            "type": "string",
            "enum": [
              "chat.completion"
            ],
            "const": "chat.completion",
            "title": "Object"
          },
          "service_tier": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "scale",
                  "default"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Tier"
          },
          "system_fingerprint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Fingerprint"
          },
          "usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompletionUsage"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "choices",
          "created",
          "model",
          "object"
        ],
        "title": "ChatCompletion"
      },
      "ChatCompletionAssistantMessageParam": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "assistant"
            ],
            "const": "assistant",
            "title": "Role"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Audio"
              },
              {
                "type": "null"
              }
            ]
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartRefusalParam"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "function_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionCall-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "refusal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionMessageToolCallParam"
            },
            "type": "array",
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatCompletionAssistantMessageParam"
      },
      "ChatCompletionAudio": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "data": {
            "type": "string",
            "title": "Data"
          },
          "expires_at": {
            "type": "integer",
            "title": "Expires At"
          },
          "transcript": {
            "type": "string",
            "title": "Transcript"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "data",
          "expires_at",
          "transcript"
        ],
        "title": "ChatCompletionAudio"
      },
      "ChatCompletionContentPartImageParam": {
        "properties": {
          "image_url": {
            "$ref": "#/components/schemas/ImageURL"
          },
          "type": {
            "type": "string",
            "enum": [
              "image_url"
            ],
            "const": "image_url",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "image_url",
          "type"
        ],
        "title": "ChatCompletionContentPartImageParam"
      },
      "ChatCompletionContentPartInputAudioParam": {
        "properties": {
          "input_audio": {
            "$ref": "#/components/schemas/InputAudio"
          },
          "type": {
            "type": "string",
            "enum": [
              "input_audio"
            ],
            "const": "input_audio",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "input_audio",
          "type"
        ],
        "title": "ChatCompletionContentPartInputAudioParam"
      },
      "ChatCompletionContentPartRefusalParam": {
        "properties": {
          "refusal": {
            "type": "string",
            "title": "Refusal"
          },
          "type": {
            "type": "string",
            "enum": [
              "refusal"
            ],
            "const": "refusal",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "refusal",
          "type"
        ],
        "title": "ChatCompletionContentPartRefusalParam"
      },
      "ChatCompletionContentPartTextParam": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "text",
          "type"
        ],
        "title": "ChatCompletionContentPartTextParam"
      },
      "ChatCompletionDeveloperMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": [
              "developer"
            ],
            "const": "developer",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionDeveloperMessageParam"
      },
      "ChatCompletionFunctionMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "enum": [
              "function"
            ],
            "const": "function",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "content",
          "name",
          "role"
        ],
        "title": "ChatCompletionFunctionMessageParam"
      },
      "ChatCompletionMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "refusal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          },
          "role": {
            "type": "string",
            "enum": [
              "assistant"
            ],
            "const": "assistant",
            "title": "Role"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatCompletionAudio"
              },
              {
                "type": "null"
              }
            ]
          },
          "function_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionCall-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionMessageToolCall"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatCompletionMessage"
      },
      "ChatCompletionMessageToolCall": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/Function-Output"
          },
          "type": {
            "type": "string",
            "enum": [
              "function"
            ],
            "const": "function",
            "title": "Type"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "function",
          "type"
        ],
        "title": "ChatCompletionMessageToolCall"
      },
      "ChatCompletionMessageToolCallParam": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/Function-Input"
          },
          "type": {
            "type": "string",
            "enum": [
              "function"
            ],
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "function",
          "type"
        ],
        "title": "ChatCompletionMessageToolCallParam"
      },
      "ChatCompletionSystemMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": [
              "system"
            ],
            "const": "system",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionSystemMessageParam"
      },
      "ChatCompletionTokenLogprob": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "bytes": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes"
          },
          "logprob": {
            "type": "number",
            "title": "Logprob"
          },
          "top_logprobs": {
            "items": {
              "$ref": "#/components/schemas/TopLogprob"
            },
            "type": "array",
            "title": "Top Logprobs"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "token",
          "logprob",
          "top_logprobs"
        ],
        "title": "ChatCompletionTokenLogprob"
      },
      "ChatCompletionToolMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": [
              "tool"
            ],
            "const": "tool",
            "title": "Role"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role",
          "tool_call_id"
        ],
        "title": "ChatCompletionToolMessageParam"
      },
      "ChatCompletionUserMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartImageParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartInputAudioParam"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "enum": [
              "user"
            ],
            "const": "user",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionUserMessageParam"
      },
      "Choice": {
        "properties": {
          "finish_reason": {
            "type": "string",
            "enum": [
              "stop",
              "length",
              "tool_calls",
              "content_filter",
              "function_call"
            ],
            "title": "Finish Reason"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "logprobs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChoiceLogprobs"
              },
              {
                "type": "null"
              }
            ]
          },
          "message": {
            "$ref": "#/components/schemas/ChatCompletionMessage"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "finish_reason",
          "index",
          "message"
        ],
        "title": "Choice"
      },
      "ChoiceLogprobs": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionTokenLogprob"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "refusal": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionTokenLogprob"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "ChoiceLogprobs"
      },
      "CompareEvaluationRequestDTO": {
        "properties": {
          "evaluation_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Evaluation Ids"
          }
        },
        "type": "object",
        "required": [
          "evaluation_ids"
        ],
        "title": "CompareEvaluationRequestDTO"
      },
      "CompareEvaluationSameDatasetResponseTypeDTO": {
        "properties": {
          "rowId": {
            "type": "string",
            "title": "Rowid"
          },
          "convPrefix": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Convprefix"
          },
          "response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "eval1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvalTypeDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "eval2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvalTypeDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "eval3": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvalTypeDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "rowId",
          "convPrefix",
          "response",
          "context",
          "eval1",
          "eval2",
          "eval3"
        ],
        "title": "CompareEvaluationSameDatasetResponseTypeDTO"
      },
      "CompletionCreateParams": {
        "properties": {
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionDeveloperMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty"
          },
          "logit_bias": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logit Bias"
          },
          "logprobs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logprobs"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N"
          },
          "parallel_tool_calls": {
            "type": "boolean",
            "title": "Parallel Tool Calls",
            "default": false
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty"
          },
          "response_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormatText"
              },
              {
                "$ref": "#/components/schemas/ResponseFormatJSONObject"
              },
              {
                "$ref": "#/components/schemas/ResponseFormatJSONSchema"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "top_logprobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Logprobs"
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P"
          },
          "user": {
            "type": "string",
            "title": "User",
            "default": ""
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean",
                "enum": [
                  false
                ],
                "const": false
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "model"
        ],
        "title": "CompletionCreateParams",
        "description": "A pydantic clone of `CompletionCreateParamsNonStreaming` from [1] for FastAPI compatabillity.\n\n[1]: https://github.com/openai/openai-python/blob/main/src/openai/types/chat/completion_create_params.py"
      },
      "CompletionTokensDetails": {
        "properties": {
          "accepted_prediction_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Prediction Tokens"
          },
          "audio_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Tokens"
          },
          "reasoning_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning Tokens"
          },
          "rejected_prediction_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejected Prediction Tokens"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CompletionTokensDetails"
      },
      "CompletionUsage": {
        "properties": {
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens"
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "completion_tokens_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CompletionTokensDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "prompt_tokens_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptTokensDetails"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "completion_tokens",
          "prompt_tokens",
          "total_tokens"
        ],
        "title": "CompletionUsage"
      },
      "ConversationDTO": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "model_id": {
            "type": "string",
            "format": "uuid",
            "title": "Model Id"
          },
          "system_prompt": {
            "type": "string",
            "minLength": 1,
            "title": "System Prompt"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature"
          },
          "top_p": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Top P"
          },
          "rep_penalty": {
            "type": "number",
            "maximum": 2.0,
            "minimum": -2.0,
            "title": "Rep Penalty"
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag"
          },
          "dataset_annotation": {
            "$ref": "#/components/schemas/DatasetAnnotationCreateEnum",
            "default": "NONE"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/OpenAIConversationMessage"
            },
            "type": "array",
            "title": "Messages"
          }
        },
        "type": "object",
        "required": [
          "name",
          "model_id",
          "system_prompt",
          "temperature",
          "top_p",
          "rep_penalty",
          "messages"
        ],
        "title": "ConversationDTO"
      },
      "ConversationMessage": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "ConversationMessage"
      },
      "ConversationMessageDTO": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "ConversationMessageDTO"
      },
      "ConversationUpload": {
        "properties": {
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "conversations": {
            "items": {
              "$ref": "#/components/schemas/ConversationDTO"
            },
            "type": "array",
            "title": "Conversations"
          }
        },
        "type": "object",
        "required": [
          "space_id",
          "conversations"
        ],
        "title": "ConversationUpload"
      },
      "CreateDatasetResponseDTO": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "message"
        ],
        "title": "CreateDatasetResponseDTO"
      },
      "CreateNewDatasetRequestDTO": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "parent_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Dataset Id"
          },
          "conversations": {
            "items": {
              "$ref": "#/components/schemas/DatasetAnnotationsRequestDTO"
            },
            "type": "array",
            "title": "Conversations"
          }
        },
        "type": "object",
        "required": [
          "name",
          "space_id",
          "conversations"
        ],
        "title": "CreateNewDatasetRequestDTO"
      },
      "DatasetAnnotationCreateEnum": {
        "type": "string",
        "enum": [
          "EVERY_TURN",
          "LAST_TURN",
          "NONE"
        ],
        "title": "DatasetAnnotationCreateEnum"
      },
      "DatasetAnnotationJudgementDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "judgement": {
            "title": "Judgement",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "DatasetAnnotationJudgementDTO"
      },
      "DatasetAnnotationsDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "db_id": {
            "type": "string",
            "format": "uuid",
            "title": "Db Id"
          },
          "conv_prefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Conv Prefix"
          },
          "response": {
            "type": "string",
            "title": "Response"
          },
          "judge_feedback": {
            "type": "object",
            "title": "Judge Feedback"
          },
          "human_feedback": {
            "type": "object",
            "title": "Human Feedback"
          },
          "judge_feedback_rating": {
            "type": "object",
            "title": "Judge Feedback Rating"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "ground_truth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth"
          },
          "conv_prefix_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conv Prefix Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "db_id",
          "conv_prefix",
          "response",
          "judge_feedback",
          "human_feedback",
          "judge_feedback_rating",
          "created_at"
        ],
        "title": "DatasetAnnotationsDTO"
      },
      "DatasetAnnotationsNewDTO": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "dbId": {
            "type": "string",
            "format": "uuid",
            "title": "Dbid"
          },
          "convPrefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Convprefix"
          },
          "response": {
            "type": "string",
            "title": "Response"
          },
          "judgeFeedback": {
            "type": "object",
            "title": "Judgefeedback"
          },
          "humanFeedback": {
            "type": "object",
            "title": "Humanfeedback"
          },
          "judgeFeedbackRating": {
            "type": "object",
            "title": "Judgefeedbackrating"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "conversationId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversationid"
          },
          "groundTruth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groundtruth"
          },
          "convPrefixId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convprefixid"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dbId",
          "convPrefix",
          "response",
          "judgeFeedback",
          "humanFeedback",
          "judgeFeedbackRating",
          "createdAt"
        ],
        "title": "DatasetAnnotationsNewDTO"
      },
      "DatasetAnnotationsRequestDTO": {
        "properties": {
          "conv_prefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Conv Prefix"
          },
          "response": {
            "type": "string",
            "title": "Response"
          },
          "judgements": {
            "title": "Judgements",
            "default": {}
          },
          "ground_truth": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth"
          }
        },
        "type": "object",
        "required": [
          "conv_prefix",
          "response"
        ],
        "title": "DatasetAnnotationsRequestDTO"
      },
      "DatasetByNameRequestDTO": {
        "properties": {
          "dataset_name": {
            "type": "string",
            "title": "Dataset Name"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          }
        },
        "type": "object",
        "required": [
          "dataset_name",
          "space_id"
        ],
        "title": "DatasetByNameRequestDTO"
      },
      "DownloadVeritasLogsRequestDTO": {
        "properties": {
          "start_ts": {
            "type": "string",
            "title": "Start Ts"
          },
          "end_ts": {
            "type": "string",
            "title": "End Ts"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "selected_rows": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Rows",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "start_ts",
          "end_ts",
          "space_id"
        ],
        "title": "DownloadVeritasLogsRequestDTO"
      },
      "EvalTypeDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "judgement": {
            "type": "integer",
            "title": "Judgement"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rationale"
          },
          "raw": {
            "title": "Raw"
          },
          "response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response"
          }
        },
        "type": "object",
        "required": [
          "id",
          "judgement",
          "category",
          "rationale",
          "raw",
          "response"
        ],
        "title": "EvalTypeDTO"
      },
      "Function-Input": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "Function"
      },
      "Function-Output": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "Function"
      },
      "FunctionCall-Input": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "FunctionCall"
      },
      "FunctionCall-Output": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "FunctionCall"
      },
      "GetDatasetByNameResponseDTO": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_annotations": {
            "items": {
              "$ref": "#/components/schemas/DatasetAnnotationsDTO"
            },
            "type": "array",
            "title": "Dataset Annotations"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "dataset_annotations"
        ],
        "title": "GetDatasetByNameResponseDTO"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageURL": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "detail": {
            "type": "string",
            "enum": [
              "auto",
              "low",
              "high"
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ImageURL"
      },
      "InputAudio": {
        "properties": {
          "data": {
            "type": "string",
            "title": "Data"
          },
          "format": {
            "type": "string",
            "enum": [
              "wav",
              "mp3"
            ],
            "title": "Format"
          }
        },
        "type": "object",
        "required": [
          "data",
          "format"
        ],
        "title": "InputAudio"
      },
      "InviteNewUser": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "role"
        ],
        "title": "InviteNewUser"
      },

      "CuratorJudgeRequestDTO": {
        "properties": {
          "conv_prefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Conv Prefix"
          },
          "response": {
            "$ref": "#/components/schemas/ConversationMessage"
          },
          "instruction_following": {
            "type": "boolean",
            "title": "Instruction Following"
          },
          "quality_of_reasoning": {
            "type": "boolean",
            "title": "Quality Of Reasoning"
          },
          "coherence": {
            "type": "boolean",
            "title": "Coherence"
          },
          "instruction_complexity": {
            "type": "boolean",
            "title": "Instruction Complexity"
          }
        },
        "type": "object",
        "required": [
          "conv_prefix",
          "response",
          "role"
        ],
        "title": "Curator Judge Request"
      },
      "CuratorJudgeResponseDTO": {
        "properties": {
          "instruction_following": {
            "type": "number",
            "title": "Instruction Following"
          },
          "quality_of_reasoning": {
            "type": "number",
            "title": "Quality Of Reasoning"
          },
          "coherence": {
            "type": "number",
            "title": "Coherence"
          },
          "instruction_complexity": {
            "type": "number",
            "title": "Instruction Complexity"
          }
        },
        "type": "object",
        "title": "Curator Judge Response"
      },
      "JSONSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "schema": {
            "type": "object",
            "title": "Schema"
          },
          "strict": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strict"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "JSONSchema"
      },
      "JudgeAnnotationHallucinationDTO": {
        "properties": {
          "context": {
            "type": "string",
            "title": "Context"
          },
          "conv_prefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Conv Prefix"
          },
          "response": {
            "$ref": "#/components/schemas/ConversationMessage"
          },
          "judge_id": {
            "type": "string",
            "format": "uuid",
            "title": "Judge Id"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          }
        },
        "type": "object",
        "required": [
          "context",
          "conv_prefix",
          "response",
          "judge_id",
          "space_id"
        ],
        "title": "JudgeAnnotationHallucinationDTO"
      },
      "JudgeBehaviorTypeEnum": {
        "type": "string",
        "enum": [
          "safety",
          "reliability",
          "custom"
        ],
        "title": "JudgeBehaviorTypeEnum"
      },
      "JudgeCreateRequestDTO": {
        "properties": {
          "optimize_prompt": {
            "type": "boolean",
            "title": "Optimize Prompt"
          },
          "judge_values": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Judge Values"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "judge_behavior_type": {
            "$ref": "#/components/schemas/JudgeBehaviorTypeEnum"
          },
          "model_name": {
            "$ref": "#/components/schemas/JudgeModelTypeEnum"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "prompt_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Template"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "dataset_annotation_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Dataset Annotation Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "optimize_prompt",
          "judge_values",
          "name",
          "judge_behavior_type",
          "model_name",
          "space_id"
        ],
        "title": "JudgeCreateRequestDTO"
      },
      "JudgeCreateSdkRequestDTO": {
        "properties": {
          "judge_name": {
            "type": "string",
            "title": "Judge Name"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "nano_model_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "prompt",
                  "refusal",
                  "response"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Model Type"
          },
          "qa_few_shot": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qa Few Shot"
          },
          "nli_few_shot": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nli Few Shot"
          },
          "conv_few_shot": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conv Few Shot"
          },
          "rag_api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Api Key"
          },
          "rag_index": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Index"
          },
          "rag_namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Namespace"
          },
          "rag_top_k": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Top K"
          },
          "rag_host": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Host"
          }
        },
        "type": "object",
        "required": [
          "judge_name",
          "space_id",
          "model_name"
        ],
        "title": "JudgeCreateSdkRequestDTO"
      },
      "JudgeDashboardDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "behavior_type": {
            "$ref": "#/components/schemas/JudgeBehaviorTypeEnum"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "behavior_type"
        ],
        "title": "JudgeDashboardDTO"
      },
      "JudgeDatasetAnnotationRequest": {
        "properties": {
          "judge_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Judge Ids"
          }
        },
        "type": "object",
        "required": [
          "judge_ids"
        ],
        "title": "JudgeDatasetAnnotationRequest"
      },
      "JudgeModelTypeEnum": {
        "type": "string",
        "enum": [
          "llama_guard",
          "wild_guard",
          "persona",
          "collinear_guard",
          "collinear_guard_beta",
          "collinear_guard_classifier",
          "collinear_guard_classifier_beta",
          "prompted_model",
          "veritas",
          "veritas_large",
          "lynx",
          "custom",
          "collinear_guard_category"
        ],
        "title": "JudgeModelTypeEnum"
      },
      "JudgeOutputDTO": {
        "properties": {
          "judgement": {
            "type": "integer",
            "title": "Judgement"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "judgement"
        ],
        "title": "JudgeOutputDTO"
      },

      "JudgeSafetyRequestDTO": {
        "properties": {
          "conv_prefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessage"
            },
            "type": "array",
            "title": "Conv Prefix"
          },
          "response": {
            "$ref": "#/components/schemas/ConversationMessage"
          },
          "judge_id": {
            "type": "string",
            "format": "uuid",
            "title": "Judge Id"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          }
        },
        "type": "object",
        "required": [
          "conv_prefix",
          "response",
          "judge_id",
          "space_id"
        ],
        "title": "JudgeSafetyRequestDTO"
      },
      "JudgementConversationReqInput": {
        "properties": {
          "conversation_prefix": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessageDTO"
            },
            "type": "array",
            "title": "Conversation Prefix"
          },
          "response": {
            "$ref": "#/components/schemas/ConversationMessageDTO"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "judge_id": {
            "type": "string",
            "format": "uuid",
            "title": "Judge Id"
          }
        },
        "type": "object",
        "required": [
          "conversation_prefix",
          "response",
          "space_id",
          "judge_id"
        ],
        "title": "JudgementConversationReqInput"
      },
      "LogsAdditionRequestDTO": {
        "properties": {
          "entries": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Entries"
          }
        },
        "type": "object",
        "required": [
          "entries"
        ],
        "title": "LogsAdditionRequestDTO"
      },
      "MessageRoleEnum": {
        "type": "string",
        "enum": [
          "user",
          "assistant"
        ],
        "title": "MessageRoleEnum"
      },
      "Model": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "object": {
            "type": "string",
            "enum": [
              "model"
            ],
            "const": "model",
            "title": "Object"
          },
          "owned_by": {
            "type": "string",
            "title": "Owned By"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "created",
          "object",
          "owned_by"
        ],
        "title": "Model"
      },
      "ModelList": {
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "list"
            ],
            "const": "list",
            "title": "Object"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Model"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "object",
          "data"
        ],
        "title": "ModelList",
        "description": "A wrapper of `Model` from [1] for FastAPI compatabillity.\n\n[1]: https://github.com/openai/openai-python/blob/main/src/openai/types/model.py"
      },
      "ModelResponseDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "base_url": {
            "type": "string",
            "title": "Base Url"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          },
          "space_id": {
            "type": "string",
            "format": "uuid",
            "title": "Space Id"
          },
          "model_type": {
            "$ref": "#/components/schemas/ModelTypeEnum"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "nickname",
          "base_url",
          "api_key",
          "space_id",
          "model_type"
        ],
        "title": "ModelResponseDTO"
      },
      "ModelTypeEnum": {
        "type": "string",
        "enum": [
          "openai",
          "anthropic"
        ],
        "title": "ModelTypeEnum"
      },
      "OpenAIConversationMessage": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/MessageRoleEnum"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "OpenAIConversationMessage"
      },
      "PromptTokensDetails": {
        "properties": {
          "audio_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Tokens"
          },
          "cached_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cached Tokens"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "PromptTokensDetails"
      },
      "ResponseFormatJSONObject": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "json_object"
            ],
            "const": "json_object",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ResponseFormatJSONObject"
      },
      "ResponseFormatJSONSchema": {
        "properties": {
          "json_schema": {
            "$ref": "#/components/schemas/JSONSchema"
          },
          "type": {
            "type": "string",
            "enum": [
              "json_schema"
            ],
            "const": "json_schema",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "json_schema",
          "type"
        ],
        "title": "ResponseFormatJSONSchema"
      },
      "ResponseFormatText": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ],
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ResponseFormatText"
      },
      "RoleEnum": {
        "type": "string",
        "enum": [
          "new_user",
          "admin",
          "user"
        ],
        "title": "RoleEnum"
      },
      "RunInferenceRequestDTO": {
        "properties": {
          "model_id": {
            "type": "string",
            "format": "uuid",
            "title": "Model Id"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ConversationMessageDTO"
            },
            "type": "array",
            "title": "Messages"
          },
          "generation_kwargs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generation Kwargs",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "messages"
        ],
        "title": "RunInferenceRequestDTO"
      },
      "SynthDataGenerateRequestDTO": {
        "properties": {
          "model_id": {
            "type": "string",
            "format": "uuid",
            "title": "Model Id"
          },
          "multiplier": {
            "type": "integer",
            "title": "Multiplier"
          },
          "examples": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Examples"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "multiplier",
          "examples",
          "prompt"
        ],
        "title": "SynthDataGenerateRequestDTO"
      },
      "SynthDataGenerateResponseDTO": {
        "properties": {
          "original": {
            "type": "object",
            "title": "Original"
          },
          "generated": {
            "type": "object",
            "title": "Generated"
          }
        },
        "type": "object",
        "required": [
          "original",
          "generated"
        ],
        "title": "SynthDataGenerateResponseDTO"
      },
      "TopLogprob": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "bytes": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes"
          },
          "logprob": {
            "type": "number",
            "title": "Logprob"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "token",
          "logprob"
        ],
        "title": "TopLogprob"
      },
      "User": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/RoleEnum"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "The UUID of the user"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id",
            "description": "The UUID of the team this user belongs to"
          },
          "auth0_id": {
            "type": "string",
            "title": "Auth0 Id",
            "description": "The Auth0 ID of the user"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "role",
          "auth0_id"
        ],
        "title": "User"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}